<launch>
    <!-- <param name="/use_sim_time" value="true"/> -->
    <param name="use_sim_time" value="true"/>

    <!-- stage -->
    <node pkg="stage_ros" type="stageros" name="stageros" args="$(find stage_simulation)/stage/eurobot_beacon.world" output="screen">
        <remap from="base_scan" to="scan"/>
    </node>
    <!-- <node name="stage_correction" pkg="stage_simulation" type="correction.py" /> -->
    
    <!-- map -->
    <!-- <node name="map_odom" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0 0 0 0 1 map odom"/> -->
    <arg name="map_file" default="$(find stage_simulation)/maps/eurobot_map/empty_map.yaml"/>
    
    <!-- Run the map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

    <!-- rviz -->
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find stage_simulation)/rviz/stage.rviz" />

    <!-- Obstacle detector -->
    <include file="$(find obstacle_detector)/launch/nodes.launch"/>

    <!-- ekf node for holonomic drive -->
    <node pkg="tf" type="static_transform_publisher" name="landmark1_broadcaster" args="0.05 3.1 0 0 0 0 map landmark1 100" />
    <node pkg="tf" type="static_transform_publisher" name="landmark2_broadcaster" args="1.0 -0.05 0 0 0 0 map landmark2 100" />
    <node pkg="tf" type="static_transform_publisher" name="landmark3_broadcaster" args="1.95 3.1 0 0 0 0 map landmark3 100" />
    <node name="ekf_localization" pkg="ekf_localization" type="ekf_holonomic.py" output="screen"/>
    <!-- <node name="landmark_extractor" pkg="ekf_localization" type="landmark_extractor.py" /> -->

    <!-- teleop keyboard -->
    <!-- <node name="teleop_twist_keyboard" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen"/> -->


</launch>
